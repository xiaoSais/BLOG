(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{249:function(e,s,a){"use strict";a.r(s);var t=a(17),n=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"八、fetch-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八、fetch-api"}},[e._v("#")]),e._v(" 八、fetch Api")]),e._v(" "),a("h2",{attrs:{id:"与-xmlhttprequest-的异同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与-xmlhttprequest-的异同"}},[e._v("#")]),e._v(" 与 XMLHttpRequest 的异同")]),e._v(" "),a("p",[e._v("浏览器提供全局 fecth 方法，可以看做是 XMLHttpRequest 的替代品。")]),e._v(" "),a("p",[e._v("它与后者的区别主要有三点：")]),e._v(" "),a("p",[e._v("1、 接收到错误的状态时，比如 404 或者 500错误，fecth 方法返回的 promise 也不会标记为 reject 状态，而是 resolve 状态。除非遇到网络故障。")]),e._v(" "),a("p",[e._v("2、fetch() 不会接受跨域 cookies；你也不能使用 fetch() 建立起跨域会话。其他网站的 Set-Cookie 头部字段将会被无视。")]),e._v(" "),a("p",[e._v("3、fetch 不会发送 cookies。除非你使用了credentials 的初始化选项。")]),e._v(" "),a("h2",{attrs:{id:"response-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-对象"}},[e._v("#")]),e._v(" Response 对象")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("fetch('/data', {\n    body: JSON.stringify({name: 'xxx'}),\n    method: 'POST'\n  }).then(res => {\n    console.log(res)\n    return res.text()\n  }).then(rs => {\n    console.log(rs)\n  })\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("打印出来 fetch 返回的 response 如下：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('  type: "basic"\n  url: "http://localhost:3001/data"\n  redirected: false\n  status: 200\n  ok: true\n  statusText: "OK"\n  headers: Headers {}\n  body: ReadableStream\n  bodyUsed: true\n  __proto__: Response\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("h3",{attrs:{id:"type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[e._v("#")]),e._v(" type")]),e._v(" "),a("p",[e._v("type 代表响应类型，是通过 config 中的 mode 请求模式设置的。")]),e._v(" "),a("p",[e._v("当 config 中 mode 设置为：")]),e._v(" "),a("ul",[a("li",[e._v("'cors' 谷歌浏览器 47 版本之后默认。")]),e._v(" "),a("li",[e._v("'no-cors' 该模式用于跨域请求但是服务器不带CORS响应头，也就是服务端不支持CORS；这也是fetch的特殊跨域请求方式")]),e._v(" "),a("li",[e._v("'same-origin' 浏览器不支持跨域，需要遵守同源策略")])]),e._v(" "),a("p",[e._v("请求成功后返回的 response 分别对应为：")]),e._v(" "),a("ul",[a("li",[e._v("'cors'")]),e._v(" "),a("li",[e._v("'opaque'")]),e._v(" "),a("li",[e._v("'basic'")])]),e._v(" "),a("h3",{attrs:{id:"status"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#status"}},[e._v("#")]),e._v(" status *")]),e._v(" "),a("p",[e._v("Response.status — 整数（默认值为200）为response的状态码。")]),e._v(" "),a("p",[e._v('Response.statusText — 字符串（默认值为"OK"），该值与 HTTP 状态码消息对应。')]),e._v(" "),a("p",[e._v("Response.ok — 如上所示，该属性是来检查response的状态是否在 200 - 299（包括200 和 299）这个范围内。该属性返回一个布尔值。")]),e._v(" "),a("h3",{attrs:{id:"body"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#body"}},[e._v("#")]),e._v(" body")]),e._v(" "),a("p",[e._v("body 对象定义了以下方法：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  arrayBuffer()\n  blob()\n  json()\n  text()\n  formData()\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("response 实现了这些方法，这也是我们能通过 response.text() 获取 body 所返回数据的原因。")]),e._v(" "),a("p",[e._v("当前我们传参的时候也可以作为 Request 的一个选项。")]),e._v(" "),a("h2",{attrs:{id:"request-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-对象"}},[e._v("#")]),e._v(" Request 对象")]),e._v(" "),a("p",[e._v("fetch() 方法的第一个参数是url，第二个参数即为请求配置项。")]),e._v(" "),a("p",[e._v("我们使用 fecth 的时候也可以直接创建一个 Request 对象并传入 fetch。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  var myHeaders = new Headers();\n\n  var myInit = { method: 'GET',\n                headers: myHeaders,\n                mode: 'cors',\n                cache: 'default' };\n\n  var myRequest = new Request('flowers.jpg', myInit);\n\n  fetch(myRequest).then(function(response) {\n    return response.blob();\n  }).then(function(myBlob) {\n    var objectURL = URL.createObjectURL(myBlob);\n    myImage.src = objectURL;\n  });\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br")])]),a("p",[e._v("上个例子等同于：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  fetch('flowers.jpg', myInit)\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("Request() 构造器创建一个新的Request 对象。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  var myRequest = new Request(input, init);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("input 为资源的URL")]),e._v(" "),a("p",[e._v("init 为可选项，可用的选项如下：")]),e._v(" "),a("ul",[a("li",[e._v("method: 请求的方法，例如：GET, POST。")]),e._v(" "),a("li",[e._v("headers: 任何你想加到请求中的头，其被放在Headers对象或内部值为ByteString 的对象字面量中。")]),e._v(" "),a("li",[e._v("body: 任何你想加到请求中的body，可以是Blob, BufferSource, FormData, URLSearchParams, 或 USVString对象。注意GET 和 HEAD请求没有body。")]),e._v(" "),a("li",[e._v("mode: 请求的模式, 比如 cors, no-cors, same-origin, 或 navigate。默认值应该为 cors。但在Chrome中，Chrome 47 之前的版本默认值为 no-cors ，自Chrome 47起，默认值为same-origin。")]),e._v(" "),a("li",[e._v("credentials: 想要在请求中使用的credentials：: omit, same-origin, 或 include。默认值应该为omit。但在Chrome中，Chrome 47 之前的版本默认值为 same-origin ，自Chrome 47起，默认值为include。")]),e._v(" "),a("li",[e._v("cache: 请求中想要使用的cache mode")]),e._v(" "),a("li",[e._v("redirect: 对重定向处理的模式： follow, error, or manual。在Chrome中，Chrome 47 之前的版本默认值为 manual ，自Chrome 47起，默认值为follow。")]),e._v(" "),a("li",[e._v("referrer: 一个指定了no-referrer, client, 或一个 URL的 USVString 。默认值是client.")]),e._v(" "),a("li",[e._v("integrity: 包括请求的 subresource integrity 值 (e.g., sha256-BpfBw7ivV8q2jLiT13fxDYAe2tJllusRSZ273h2nFSE=).")])]),e._v(" "),a("h2",{attrs:{id:"headers-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#headers-对象"}},[e._v("#")]),e._v(" Headers 对象")]),e._v(" "),a("p",[e._v("fetch 的配置项中有 headers 选项，该选项定义请求头。它可以通过全局的 Headers 构造函数创建。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  var myHeaders = new Headers(init);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("init 通过一个包含任意 HTTP headers 的对象来预设你的 Headers. 可以是一个ByteString 对象; 或者是一个已存在的 Headers 对象。")]),e._v(" "),a("p",[e._v("eg:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  var myHeaders = new Headers(); // Currently empty\n\n  myHeaders.append('Content-Type', 'image/jpeg');\n  myHeaders.get('Content-Type'); // Returns 'image/jpeg'\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);